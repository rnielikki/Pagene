### YamlMime:ManagedReference
items:
- uid: Pagene.BlogSettings.RoutePathInfo
  commentId: T:Pagene.BlogSettings.RoutePathInfo
  id: RoutePathInfo
  parent: Pagene.BlogSettings
  children:
  - Pagene.BlogSettings.RoutePathInfo.ContentPath
  - Pagene.BlogSettings.RoutePathInfo.TagPath
  langs:
  - csharp
  - vb
  name: RoutePathInfo
  nameWithType: RoutePathInfo
  fullName: Pagene.BlogSettings.RoutePathInfo
  type: Class
  source:
    remote:
      path: Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
      branch: experimental
      repo: https://github.com/rnielikki/Pagene.git
    id: RoutePathInfo
    path: ../../Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
    startLine: 5
  assemblies:
  - Pagene.BlogSettings
  namespace: Pagene.BlogSettings
  summary: "\nDefines front-end reader framework-specific (Blazor, React, Vue, Angular or whatever) routes.\n"
  example: []
  syntax:
    content: public static class RoutePathInfo
    content.vb: Public Module RoutePathInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Pagene.BlogSettings.RoutePathInfo.ContentPath
  commentId: P:Pagene.BlogSettings.RoutePathInfo.ContentPath
  id: ContentPath
  parent: Pagene.BlogSettings.RoutePathInfo
  langs:
  - csharp
  - vb
  name: ContentPath
  nameWithType: RoutePathInfo.ContentPath
  fullName: Pagene.BlogSettings.RoutePathInfo.ContentPath
  type: Property
  source:
    remote:
      path: Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
      branch: experimental
      repo: https://github.com/rnielikki/Pagene.git
    id: ContentPath
    path: ../../Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
    startLine: 12
  assemblies:
  - Pagene.BlogSettings
  namespace: Pagene.BlogSettings
  summary: "\nLink to the blog post, on your framework.\nfor example, the reader will read from: https://example.com/{ContentPath}/your-blog-post-name\n"
  remarks: This is automatically URL-encoded. Don&apos;t put slash(&quot;/&quot;) into this.
  example: []
  syntax:
    content: public static string ContentPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ContentPath As String
  overload: Pagene.BlogSettings.RoutePathInfo.ContentPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Pagene.BlogSettings.RoutePathInfo.TagPath
  commentId: P:Pagene.BlogSettings.RoutePathInfo.TagPath
  id: TagPath
  parent: Pagene.BlogSettings.RoutePathInfo
  langs:
  - csharp
  - vb
  name: TagPath
  nameWithType: RoutePathInfo.TagPath
  fullName: Pagene.BlogSettings.RoutePathInfo.TagPath
  type: Property
  source:
    remote:
      path: Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
      branch: experimental
      repo: https://github.com/rnielikki/Pagene.git
    id: TagPath
    path: ../../Pagene.BlogSettings/Pagene.BlogSettings/RoutePathInfo.cs
    startLine: 19
  assemblies:
  - Pagene.BlogSettings
  namespace: Pagene.BlogSettings
  summary: "\nLink to the tag list, on your framework.\nfor example, the reader will read from: https://example.com/{TagPath}/0\n"
  remarks: This is automatically URL-encoded. Don&apos;t put slash(&quot;/&quot;) into this.
  example: []
  syntax:
    content: public static string TagPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property TagPath As String
  overload: Pagene.BlogSettings.RoutePathInfo.TagPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Pagene.BlogSettings
  commentId: N:Pagene.BlogSettings
  name: Pagene.BlogSettings
  nameWithType: Pagene.BlogSettings
  fullName: Pagene.BlogSettings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Pagene.BlogSettings.RoutePathInfo.ContentPath*
  commentId: Overload:Pagene.BlogSettings.RoutePathInfo.ContentPath
  name: ContentPath
  nameWithType: RoutePathInfo.ContentPath
  fullName: Pagene.BlogSettings.RoutePathInfo.ContentPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Pagene.BlogSettings.RoutePathInfo.TagPath*
  commentId: Overload:Pagene.BlogSettings.RoutePathInfo.TagPath
  name: TagPath
  nameWithType: RoutePathInfo.TagPath
  fullName: Pagene.BlogSettings.RoutePathInfo.TagPath
